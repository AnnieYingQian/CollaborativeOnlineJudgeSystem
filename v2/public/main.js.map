{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/pipes/search.pipe.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/input.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport { routing } from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { InputService } from './services/input.service';\nimport { SearchPipe } from './pipes/search.pipe';\nimport { DataService } from './services/data.service';\nimport { EditorComponent } from './components/editor/editor.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent,\n    SearchPipe,\n    EditorComponent\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    DataService,\n    InputService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'problems',\n        pathMatch: 'full'\n    },\n    {\n        path: 'problems',\n        component: ProblemListComponent\n    },\n    {\n        path: 'problems/:id', // :id is a parameter eg. probelm/1 (id=1)\n        component: ProblemDetailComponent\n    },\n    {\n        path: '**',\n        redirectTo: 'problems'\n    }\n]\n\nexport const routing = RouterModule.forRoot(routes);","module.exports = \"@media screen { \\n    #editor { \\n      height: 600px; \\n    } \\n   \\n    .lang-select { \\n      width: 100px; \\n      margin-right: 10px; \\n    } \\n   \\n    header .btn { \\n      margin: 0 5px; \\n    } \\n   \\n    footer .btn { \\n      margin: 0 5px; \\n    } \\n   \\n    .editor-footer, .editor-header { \\n      margin: 10px 0; \\n    } \\n   \\n    .cursor { \\n      /*position:absolute;*/ \\n      background: rgba(0, 250, 0, 0.5); \\n      z-index: 40; \\n      width: 2px!important \\n    } \\n   } \"","module.exports = \"<section>\\n    <header class=\\\"editor-header\\\">\\n      <div class=\\\"row\\\">\\n        <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\"\\n          [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n        <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n          {{language}}\\n        </option>\\n        </select>\\n        <!--reset button -->\\n        <!-- Button trigger modal -->\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n          Reset\\n        </button>\\n  \\n        <!-- Modal -->\\n        <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n          <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                You will lose current code in the editor, are you sure?\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\n                (click)=\\\"resetEditor()\\\">Reset</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </header>\\n\\n    <div id=\\\"editor\\\">\\n    </div>\\n    <div>\\n      {{output}}\\n    </div>\\n    <div>\\n      {{users}}\\n    </div> <!-- This is the body -->\\n    <footer class=\\\"editor-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" \\n        (click)=\\\"submit()\\\">Submit Solution</button>\\n    </footer>\\n  </section>\"","import { Component, OnInit } from '@angular/core';\nimport { CollaborationService } from '../../services/collaboration.service'\nimport { Subscription } from 'rxjs/Subscription';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { DataService } from '../../services/data.service';\n\ndeclare var ace: any;\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n  public languages: string[] = ['Java', 'Python', 'C++'];\n  language: string = 'Java';\n  sessionId: string;\n  output: string = '';\n  editor: any;\n\n  users: string = '';\n  subscriptionUsers: Subscription;\n\n  defaultContent = {\n    'Java': `public class Example {\n      public static void main(String[] args) {\n        // Type your Java code here\n      }\n    }`,\n    'Python': `class solution:\n      def example():\n        # Write your Python code here`\n    ,\n    'C++': `int main() \n    {\n        return 0;\n    }\n    `\n  }\n\n  constructor(private collaboration: CollaborationService,\n    private route: ActivatedRoute,\n    private dataService: DataService) { }\n\n  ngOnInit() {\n    this.route.params\n      .subscribe(params => {\n        this.sessionId = params['id'];\n        this.initEditor();\n      });\n    \n    this.collaboration.restoreBuffer();\n  }\n\n  initEditor(): void {\n    this.editor = ace.edit(\"editor\");\n    this.editor.setTheme(\"ace/theme/eclipse\");\n\n    this.resetEditor();\n    \n    document.getElementsByTagName('textarea')[0].focus();\n    // setup collaboration socket\n    this.subscriptionUsers = this.collaboration.init(this.editor, this.sessionId)\n      .subscribe(users => this.users = users);\n    \n    this.editor.lastAppliedChange = null;\n\n    this.editor.on(\"change\", (e) => {\n      console.log('editor changes: ' + JSON.stringify(e));\n      //check if the change is same as last change\n      // if they are the same, skip this change\n      if (this.editor.lastAppliedChange != e) {\n        this.collaboration.change(JSON.stringify(e));\n      }\n    })\n  }\n\n  resetEditor(): void {\n    this.editor.setValue(this.defaultContent[this.language]);\n    this.editor.getSession().setMode(\"ace/mode/\" + this.language.toLowerCase());\n  }\n\n  setLanguage(language: string): void {\n    this.language = language;\n    this.resetEditor();\n  }\n\n  submit(): void {\n    let code = this.editor.getValue();\n    console.log(code);\n\n    const data = {\n      code: code,\n      lang: this.language.toLowerCase()\n    };\n\n    this.dataService.buildAndRun(data)\n      .then(res => {\n        this.output = res;\n        console.log(this.output)});\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light justify-content-between\\\">    \\n    <!-- Brand and toggle get grouped for better mobile display -->\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item active\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            Dropdown\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\n            <div class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n          </div>\\n        </li>\\n      </ul>\\n      <form class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"searchProblem()\\\">\\n        <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" [formControl]=\\\"searchBox\\\">       \\n        <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Submit</button>\\n      </form>\\n      <ul class=\\\"navbar-nav mr-right\\\">\\n        <li class=\\\"nav-item\\\">\\n          <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n        </li>\\n        <li class=\\\"nav-item dropdown\\\">\\n          <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            Dropdown\\n          </a>\\n          <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\n            <div class=\\\"dropdown-divider\\\"></div>\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n          </div>\\n        </li>\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n\\n  </nav>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Router } from '@angular/router';\nimport { debounceTime } from 'rxjs/operators';\nimport { InputService } from '../../services/input.service';\n\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  title = \"COJ\";\n\n  searchBox: FormControl = new FormControl();\n  subscription: Subscription;\n\n  constructor(private input: InputService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.subscription = this.searchBox\n                            .valueChanges\n                            .pipe(debounceTime(200))\n                            .subscribe(\n                              term => {\n                                this.input.changeInput(term);\n                              }\n                            );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  searchProblem(): void {\n    this.router.navigate(['/problems']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <form #formRef = \\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem name</label>\\n      <input name = \\\"problemName\\\" id=\\\"problemName\\\" class=\\\"form-control\\\"\\n        type=\\\"text\\\" required placeholder=\\\"Please enter problem name\\\" \\n        [(ngModel)] = \\\"newProblem.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem description</label>\\n      <textarea name = \\\"problemDesc\\\" id=\\\"problemDesc\\\" class=\\\"form-control\\\"\\n        required placeholder=\\\"Please enter problem description\\\" \\n        [(ngModel)] = \\\"newProblem.desc\\\" rows=\\\"3\\\">\\n      </textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"problemDifficulty\\\">Difficulty</label> \\n        <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n        [(ngModel)] = \\\"newProblem.difficulty\\\">\\n        <option *ngFor = \\\"let difficulty of difficulties\\\" [value] = \\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n        </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class = \\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary float-right\\\"\\n          (click) = \\\"addProblem()\\\"> Add problem </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n<br/>\\n<br/>\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: '',\n  desc: '',\n  difficulty: 'easy'\n})\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  difficulties: string[] = ['easy', 'medium', 'hard', 'super'];\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n\n  addProblem() {\n    this.dataService.addProblem(this.newProblem);\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12 col-md-4\\\">\\n        <div>\\n          <h2>\\n            {{problem.id}}. {{problem.name}}\\n          </h2>\\n          <p>\\n            {{problem.desc}}\\n          </p>\\n        </div>\\n      </div>\\n      <div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n        <app-editor></app-editor>\\n      </div>\\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params} from '@angular/router';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n\n  // To get id from current route, need to inject route here\n  constructor(private dataService: DataService,\n              private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      // this.problem = this.dataService.getProblem(+params['id'])\n      this.dataService.getProblem(+params['id'])\n        .then(problem => this.problem = problem);\n    });\n  }\n\n}\n","module.exports = \".difficulty {\\n    min-width: 65px;\\n    margin-right: 10px;\\n}\\n\\n.badge.difficulty {\\n    padding-top: 0.6em;\\n    color: #fbfdfa;\\n    font-size: 12px;\\n}\\n\\n.title {\\n    font-size: 1.2em;\\n}\\n\\n.diff-easy {\\n    background-color: #42ebf4;\\n}\\n\\n.diff-medium {\\n    background-color: #92cf5c;\\n}\\n\\n.diff-hard {\\n    background-color: #dd0d1e;\\n}\\n\\n.diff-super{\\n    background-color: #8d16e2;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of (problems | search: searchTerm)\\\" [routerLink]=\\\"['/problems', problem.id]\\\">\\n      <span class=\\\"{{'float-left badge difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">\\n        {{problem.difficulty}}\\n      </span>\\n      <strong class=\\\"title\\\">{{problem.id}}.{{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\nimport { InputService } from '../../services/input.service';\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\n\nexport class ProblemListComponent implements OnInit, OnDestroy {\n  problems: Problem[];\n  subscriptionProblems: Subscription;\n\n  searchTerm: string = '';\n  subscriptionInput: Subscription;\n\n  constructor(private dataService: DataService,\n              private inputService: InputService) { }\n\n  ngOnInit() {\n    // initialize problems in this class\n    this.getProblems();\n    this.getSearchTerm();\n  }\n\n  ngOnDestroy() {\n    this.subscriptionProblems.unsubscribe();\n  }\n\n  getProblems() {\n    // this.problems = this.dataService.getProblems();\n    this.subscriptionProblems = this.dataService.getProblems()\n      .subscribe(problems => this.problems = problems);\n  }\n\n  getSearchTerm(): void {\n    this.subscriptionInput =this.inputService.getInput()\n                                .subscribe(\n                                  inputTerm => this.searchTerm = inputTerm\n                                );\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nimport { Problem } from '../models/problem.model';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(problems: Problem[], term: string): Problem[] {\n    console.log(problems);\n    return problems.filter(\n      problem => problem.name.toLocaleLowerCase().includes(term)\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\ndeclare var io: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n  collaborationSocket: any;\n  private _userSource = new Subject<string>();\n\n  constructor() { }\n\n  init(editor: any, sessionId: string): Observable<string> {\n\n    this.collaborationSocket = io(window.location.origin, \n        { query: 'sessionId=' + sessionId });\n\n    this.collaborationSocket.on(\"message\", (message) => {\n      console.log('message revived from server: ' + message);\n    });\n\n    this.collaborationSocket.on(\"change\", (delta: string) => {\n      console.log('collaboration: editor changed by ' + delta);\n      delta = JSON.parse(delta);\n      editor.lastAppliedChange = delta;\n      editor.getSession().getDocument().applyDeltas([delta]);\n    });\n\n    this.collaborationSocket.on(\"userChange\", (data: string[]) => {\n      console.log('collaboration user change: ' + data);\n\n      this._userSource.next(data.toString());\n    });\n\n    return this._userSource.asObservable();\n\n  }\n\n  change(delta: string): void {\n    this.collaborationSocket.emit(\"change\", delta);\n  }\n\n  restoreBuffer(): void {\n    this.collaborationSocket.emit(\"restoreBuffer\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from '../models/problem.model';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private httpClient: HttpClient) { }\n\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        this._problemSource.next(res);\n      })\n      .catch(this.handleError);\n\n    return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res: any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    const options = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\n    return this.httpClient.post('api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: any) => {\n        this.getProblems();\n\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  buildAndRun(data) : Promise<any> {\n    const options = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\n\n    return this.httpClient.post('api/v1/build_and_run', data, options)\n      .toPromise()\n      .then(res => {\n        console.log(res);\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.body || error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputService {\n  private inputSubjects$ = new BehaviorSubject<string>('');\n\n  constructor() { }\n\n  changeInput(term) {\n    this.inputSubjects$.next(term);\n  }\n\n  getInput(): Observable<string> {\n    return this.inputSubjects$.asObservable();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}